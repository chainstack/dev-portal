{
  "openapi": "3.0.0",
  "info": {
    "title": "wallet/getmarketorderbyaccount TRON API",
    "version": "1.0.0",
    "description": "Get market orders for an account"
  },
  "servers": [
    {
      "url": "https://tron-mainnet.core.chainstack.com"
    }
  ],
  "paths": {
    "/95e61622bf6a8af293978377718e3b77/wallet/getmarketorderbyaccount": {
      "post": {
        "tags": [
          "Market and DEX"
        ],
        "summary": "wallet/getmarketorderbyaccount",
        "operationId": "getMarketOrderByAccount",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Account address in hex format"
                  },
                  "offset": {
                    "type": "number",
                    "description": "Starting position for pagination (default: 0)"
                  },
                  "limit": {
                    "type": "number",
                    "description": "Maximum number of orders to return (default: 20, max: 100)"
                  }
                },
                "required": ["address"],
                "example": {
                  "address": "41b487cdb2d8dc7b2a8e5e7e7b4e3e8b8b8b8b8b",
                  "offset": 0,
                  "limit": 20
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Market orders for the account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "order_id": {
                            "type": "string",
                            "description": "Unique identifier for the market order"
                          },
                          "owner_address": {
                            "type": "string",
                            "description": "Order creator address"
                          },
                          "create_time": {
                            "type": "number",
                            "description": "Order creation timestamp"
                          },
                          "sell_token_id": {
                            "type": "string",
                            "description": "Token ID being sold (empty for TRX)"
                          },
                          "sell_token_quantity": {
                            "type": "string",
                            "description": "Quantity of tokens being sold"
                          },
                          "buy_token_id": {
                            "type": "string",
                            "description": "Token ID being purchased (empty for TRX)"
                          },
                          "buy_token_quantity": {
                            "type": "string",
                            "description": "Quantity of tokens being purchased"
                          },
                          "sell_token_quantity_remain": {
                            "type": "string",
                            "description": "Remaining quantity for sale"
                          },
                          "buy_token_quantity_remain": {
                            "type": "string",
                            "description": "Remaining quantity to purchase"
                          },
                          "state": {
                            "type": "string",
                            "description": "Order status"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
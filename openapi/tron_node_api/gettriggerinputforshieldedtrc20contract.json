{
  "openapi": "3.0.0",
  "info": {
    "title": "wallet/gettriggerinputforshieldedtrc20contract TRON API",
    "version": "1.0.0",
    "description": "Generate trigger input parameters for shielded TRC20 contract calls"
  },
  "servers": [
    {
      "url": "https://tron-mainnet.core.chainstack.com"
    }
  ],
  "paths": {
    "/95e61622bf6a8af293978377718e3b77/wallet/gettriggerinputforshieldedtrc20contract": {
      "post": {
        "tags": [
          "Shielded Contract Methods"
        ],
        "summary": "wallet/gettriggerinputforshieldedtrc20contract",
        "operationId": "getTriggerInputForShieldedTRC20Contract",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "shielded_TRC20_Parameters",
                  "spend_authority_signature"
                ],
                "properties": {
                  "shielded_TRC20_Parameters": {
                    "type": "object",
                    "description": "Shielded TRC20 transaction parameters",
                    "required": ["spend_description", "binding_signature", "message_hash", "parameter_type"],
                    "properties": {
                      "spend_description": {
                        "type": "array",
                        "description": "Array of spend descriptions for inputs",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value_commitment": {
                              "type": "string",
                              "description": "Value commitment (hex without 0x prefix)",
                              "example": "219ed48bc4bfe14cc2953ab5027528353e177e2263479122ea97c609ce187986"
                            },
                            "anchor": {
                              "type": "string",
                              "description": "Merkle root of note commitment tree (hex without 0x prefix)",
                              "example": "c1dda86b7af8ce842e349347b364936baf24ad36be65046e2fd7349640bba873"
                            },
                            "nullifier": {
                              "type": "string",
                              "description": "Nullifier to prevent double spending (hex without 0x prefix)",
                              "example": "79e938e0951d4d6cf6acd679fc6bb59147a6abc2f9e2828185328e93a83ab2f1"
                            },
                            "rk": {
                              "type": "string",
                              "description": "Public key for spend authorization signature verification (hex without 0x prefix)",
                              "example": "99c0c1fbe3ad8a6e27d712632064fdeeb10952624c60a0ddcba0eb233bbf4e8b"
                            },
                            "zkproof": {
                              "type": "string",
                              "description": "Zero-knowledge proof data (hex without 0x prefix)",
                              "example": "b536d0f442f6e0517930a9ccdb551c9e551a148c41fcf1e4748d1330d6c3e6f9"
                            }
                          }
                        }
                      },
                      "receive_description": {
                        "type": "array",
                        "description": "Array of receive descriptions for outputs (required for transfer operations)",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value_commitment": {
                              "type": "string",
                              "description": "Value commitment (hex without 0x prefix)",
                              "example": "19ac352ba8d7f5167ef43a5b9c225056db2c44fb19f7fe8c63e0d2b956771656"
                            },
                            "note_commitment": {
                              "type": "string",
                              "description": "Note commitment (hex without 0x prefix)",
                              "example": "e40b9da38887963c8cd1e163b4b7d4b999502c32e1204b791242633aebcdbb6d"
                            },
                            "epk": {
                              "type": "string",
                              "description": "Ephemeral public key (hex without 0x prefix)",
                              "example": "b1675f0b5331371466ff30d621991f0a30c9bc4d34c322be44619a0acf932905"
                            },
                            "c_enc": {
                              "type": "string",
                              "description": "Encrypted note ciphertext (hex without 0x prefix)",
                              "example": "b69f20ae969de55319d2b7617bf7351a4683098af1e7b16fa64d44ff758471f3"
                            },
                            "c_out": {
                              "type": "string",
                              "description": "Output ciphertext for auditing (hex without 0x prefix)",
                              "example": "1e5333e35985d343697dcce92703c2536a861eb49722e1c83a112cf004006e9c"
                            },
                            "zkproof": {
                              "type": "string",
                              "description": "Zero-knowledge proof data (hex without 0x prefix)",
                              "example": "a6b41694f8fa378886ef77d5bd07de56de55b9ad7c8438d05380dd5fa1ce2e7d"
                            }
                          }
                        }
                      },
                      "binding_signature": {
                        "type": "string",
                        "description": "Binding signature for the transaction (hex without 0x prefix)",
                        "example": "c7f303709c57e49264fd5ae5922bf977ef2a57ccc84d746effc5c6937eecf36e05b09faf95e5f869aeaf1aa87b24570eb723a4d8c77edea32c31b2909c84eb04"
                      },
                      "message_hash": {
                        "type": "string",
                        "description": "Hash of the transaction message (hex without 0x prefix)",
                        "example": "7fb99e66df052f430d50e80a3f197c319a4e35184ed48a433d6219e025741337"
                      },
                      "parameter_type": {
                        "type": "string",
                        "description": "Type of shielded operation",
                        "enum": ["mint", "burn", "transfer"],
                        "example": "transfer"
                      }
                    }
                  },
                  "spend_authority_signature": {
                    "type": "array",
                    "description": "Array of spend authority signatures, one for each spend description",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Spend authorization signature (hex without 0x prefix)",
                          "example": "66c806bc592a7599e65833bf25c3c7005c8b21b7895dd835a84c97d7bec49d0f1493d2c73a68eeb9b9699b92cae42406f9e44ebe19acaea3d5febfe28de57109"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated trigger input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "trigger_contract_input": {
                      "type": "string",
                      "description": "Formatted input data for triggering the shielded TRC20 contract",
                      "example": "a9059cbb000000000000000000000041..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
{
  "openapi": "3.0.0",
  "info": {
    "title": "wallet/gettriggerinputforshieldedtrc20contract TRON API",
    "version": "1.0.0",
    "description": "Generate trigger input parameters for shielded TRC20 contract calls"
  },
  "servers": [
    {
      "url": "https://tron-mainnet.core.chainstack.com"
    }
  ],
  "paths": {
    "/95e61622bf6a8af293978377718e3b77/wallet/gettriggerinputforshieldedtrc20contract": {
      "post": {
        "tags": [
          "Shielded Contract Methods"
        ],
        "summary": "wallet/gettriggerinputforshieldedtrc20contract",
        "operationId": "getTriggerInputForShieldedTRC20Contract",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "shielded_TRC20_contract_address",
                  "scaling_factor",
                  "value_commitment",
                  "nullifier",
                  "rk", 
                  "proof"
                ],
                "properties": {
                  "shielded_TRC20_contract_address": {
                    "type": "string",
                    "description": "Address of the shielded TRC20 contract",
                    "example": "TGzz8gjYiYRqpfmDwnLxfgPuLVNmpCswVp"
                  },
                  "scaling_factor": {
                    "type": "string",
                    "description": "Scaling factor for amount calculations",
                    "example": "1000000"
                  },
                  "value_commitment": {
                    "type": "string",
                    "description": "Value commitment for the transaction",
                    "example": "0x0ff1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2"
                  },
                  "nullifier": {
                    "type": "string",
                    "description": "Nullifier to prevent double spending",
                    "example": "0x1002b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3"
                  },
                  "rk": {
                    "type": "string",
                    "description": "Randomized key for verification",
                    "example": "0x1113c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4"
                  },
                  "proof": {
                    "type": "string",
                    "description": "Zero-knowledge proof data",
                    "example": "0x1224d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated trigger input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "trigger_contract_input": {
                      "type": "string",
                      "description": "Formatted input data for contract execution",
                      "example": "0x1335e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6"
                    },
                    "parameter": {
                      "type": "string",
                      "description": "Contract call parameters"
                    },
                    "function_selector": {
                      "type": "string",
                      "description": "Function selector for contract method",
                      "example": "0x12345678"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
{
  "openapi": "3.0.0",
  "info": {
    "title": "wallet/deploycontract TRON API",
    "version": "1.0.0",
    "description": "Deploy a new smart contract to the TRON network"
  },
  "servers": [
    {
      "url": "https://tron-mainnet.core.chainstack.com"
    }
  ],
  "paths": {
    "/95e61622bf6a8af293978377718e3b77/wallet/deploycontract": {
      "post": {
        "tags": [
          "Smart Contracts"
        ],
        "summary": "wallet/deploycontract",
        "operationId": "deployContract",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "owner_address": {
                    "type": "string",
                    "description": "Address deploying the contract in hex format"
                  },
                  "abi": {
                    "type": "string",
                    "description": "Contract ABI (Application Binary Interface) as JSON string"
                  },
                  "bytecode": {
                    "type": "string",
                    "description": "Contract bytecode in hex format"
                  },
                  "parameter": {
                    "type": "string",
                    "description": "Constructor parameters encoded in hex format"
                  },
                  "call_value": {
                    "type": "number",
                    "description": "Amount of TRX to transfer to contract (in SUN)"
                  },
                  "consume_user_resource_percent": {
                    "type": "number",
                    "description": "Percentage of caller's resources used (0-100)"
                  },
                  "fee_limit": {
                    "type": "number",
                    "description": "Maximum energy fee willing to pay (in SUN)"
                  },
                  "origin_energy_limit": {
                    "type": "number",
                    "description": "Energy limit provided by contract creator"
                  },
                  "name": {
                    "type": "string",
                    "description": "Human-readable contract name"
                  }
                },
                "required": ["owner_address", "abi", "bytecode"],
                "example": {
                  "owner_address": "41b487cdb2d8dc7b2a8e5e7e7b4e3e8b8b8b8b8b",
                  "abi": "[{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"}]",
                  "bytecode": "608060405234801561001057600080fd5b5061012a806100206000396000f3fe6080604052",
                  "parameter": "",
                  "call_value": 0,
                  "consume_user_resource_percent": 100,
                  "fee_limit": 1000000000,
                  "origin_energy_limit": 10000000,
                  "name": "MyContract"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract deployment transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "visible": {
                      "type": "boolean",
                      "description": "Whether addresses are in visible format"
                    },
                    "txID": {
                      "type": "string",
                      "description": "Transaction ID of the deployment"
                    },
                    "raw_data": {
                      "type": "object",
                      "description": "Raw transaction data"
                    },
                    "raw_data_hex": {
                      "type": "string",
                      "description": "Raw transaction data in hex format"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}
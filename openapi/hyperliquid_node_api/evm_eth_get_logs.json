{
  "openapi": "3.0.0",
  "info": {
    "title": "Hyperliquid EVM API - eth_getLogs",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://hyperliquid-mainnet.core.chainstack.com/4f8d8f4040bdacd1577bff8058438274"
    }
  ],
  "paths": {
    "/evm": {
      "post": {
        "summary": "eth_getLogs",
        "description": "Returns event logs that match specified filter criteria.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["jsonrpc", "method", "params", "id"],
                "properties": {
                  "jsonrpc": {
                    "type": "string",
                    "enum": ["2.0"],
                    "default": "2.0",
                    "description": "JSON-RPC version"
                  },
                  "method": {
                    "type": "string",
                    "enum": ["eth_getLogs"],
                    "default": "eth_getLogs",
                    "description": "The RPC method name"
                  },
                  "params": {
                    "type": "array",
                    "description": "Parameters: [filterObject]",
                    "default": [
                      {
                        "address": "0x5555555555555555555555555555555555555555",
                        "fromBlock": "0x9d0c37",
                        "toBlock": "0x9d0c42"
                      }
                    ]
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Request identifier"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_getLogs",
                "params": [
                  {
                    "address": "0x5555555555555555555555555555555555555555",
                    "fromBlock": "0x9d0c37",
                    "toBlock": "0x9d0c42"
                  }
                ],
                "id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with matching event logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jsonrpc": {
                      "type": "string",
                      "description": "JSON-RPC version"
                    },
                    "id": {
                      "type": "integer",
                      "description": "Request identifier"
                    },
                    "result": {
                      "type": "array",
                      "description": "Array of log objects matching the filter criteria",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "Contract address that emitted the log"
                          },
                          "topics": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Array of indexed event parameters"
                          },
                          "data": {
                            "type": "string",
                            "description": "Non-indexed event parameters as hexadecimal string"
                          },
                          "blockNumber": {
                            "type": "string",
                            "description": "Block number containing the log"
                          },
                          "blockHash": {
                            "type": "string",
                            "description": "Hash of the block containing the log"
                          },
                          "transactionHash": {
                            "type": "string",
                            "description": "Hash of the transaction that generated the log"
                          },
                          "transactionIndex": {
                            "type": "string",
                            "description": "Index of the transaction in the block"
                          },
                          "logIndex": {
                            "type": "string",
                            "description": "Index of the log in the transaction"
                          },
                          "removed": {
                            "type": "boolean",
                            "description": "Whether the log was removed due to chain reorganization"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": [
                    {
                      "address": "0x5555555555555555555555555555555555555555",
                      "topics": [
                        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                        "0x000000000000000000000000fc1286eeddf81d6955edad5c8d99b8aa32f3d2aa",
                        "0x0000000000000000000000005555555555555555555555555555555555555555"
                      ],
                      "data": "0x0000000000000000000000000000000000000000000000000de0b6b3a7640000",
                      "blockNumber": "0x9d0c37",
                      "blockHash": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
                      "transactionHash": "0xabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890",
                      "transactionIndex": "0x0",
                      "logIndex": "0x0",
                      "removed": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
{
  "openapi": "3.0.0",
  "info": {
    "title": "Hyperliquid EVM API - trace_filter",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://hyperliquid-mainnet.core.chainstack.com/4f8d8f4040bdacd1577bff8058438274"
    }
  ],
  "paths": {
    "/evm": {
      "post": {
        "summary": "trace_filter",
        "description": "Returns traces matching the specified filter criteria. This method allows filtering traces by block range, addresses, and other criteria to find specific transaction patterns.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["jsonrpc", "method", "params", "id"],
                "properties": {
                  "jsonrpc": {
                    "type": "string",
                    "enum": ["2.0"],
                    "default": "2.0",
                    "description": "JSON-RPC version"
                  },
                  "method": {
                    "type": "string",
                    "enum": ["trace_filter"],
                    "default": "trace_filter",
                    "description": "The RPC method name"
                  },
                  "params": {
                    "type": "array",
                    "description": "Parameters: [filter object with search criteria]",
                    "default": [
                      {
                        "fromBlock": "0xb92f20",
                        "toBlock": "0xb92f6d",
                        "toAddress": ["0x5555555555555555555555555555555555555555"],
                        "count": 5
                      }
                    ]
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Request identifier"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "trace_filter",
                "params": [
                  {
                    "fromBlock": "0xb92f20",
                    "toBlock": "0xb92f6d",
                    "toAddress": ["0x5555555555555555555555555555555555555555"],
                    "count": 5
                  }
                ],
                "id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with filtered trace data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jsonrpc": {
                      "type": "string",
                      "description": "JSON-RPC version"
                    },
                    "id": {
                      "type": "integer",
                      "description": "Request identifier"
                    },
                    "result": {
                      "type": "array",
                      "description": "Array of trace objects matching the filter criteria"
                    }
                  }
                },
                "example": {
                  "jsonrpc": "2.0",
                  "id": 1,
                  "result": [
                    {
                      "action": {
                        "from": "0x69835D480110e4919B7899f465aAB101e21c8A87",
                        "to": "0xB7C609cFfa0e47DB2467ea03fF3e598bf59361A5",
                        "value": "0x0",
                        "gas": "0x...",
                        "input": "0x...",
                        "callType": "call"
                      },
                      "result": {
                        "gasUsed": "0x5208",
                        "output": "0x"
                      },
                      "traceAddress": [],
                      "type": "call",
                      "blockNumber": 12345,
                      "transactionHash": "0x..."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
{
  "openapi": "3.0.0",
  "info": {
    "title": "Hyperliquid EVM API - eth_sendRawTransaction",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://hyperliquid-mainnet.core.chainstack.com/4f8d8f4040bdacd1577bff8058438274"
    }
  ],
  "paths": {
    "/evm": {
      "post": {
        "summary": "eth_sendRawTransaction",
        "description": "Submits a pre-signed transaction to the network for broadcasting and inclusion in a block.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["jsonrpc", "method", "params", "id"],
                "properties": {
                  "jsonrpc": {
                    "type": "string",
                    "enum": ["2.0"],
                    "default": "2.0",
                    "description": "JSON-RPC version"
                  },
                  "method": {
                    "type": "string",
                    "enum": ["eth_sendRawTransaction"],
                    "default": "eth_sendRawTransaction",
                    "description": "The RPC method name"
                  },
                  "params": {
                    "type": "array",
                    "description": "Parameters: [signedTransactionData]",
                    "default": [
                      "f86d80843b9aca0082520894b7c609cffa0e47db2467ea03ff3e598bf59361a5880de0b6b3a7640000808207f2a02d013b9980176ca8674f77797ac04e928b8de3be92dd452501ec26acbb2b1abca054041f43109eeadbb4d6b712a20dc71e5dbe1225e549644be3de803b55041a89"
                    ]
                  },
                  "id": {
                    "type": "integer",
                    "default": 1,
                    "description": "Request identifier"
                  }
                }
              },
              "example": {
                "jsonrpc": "2.0",
                "method": "eth_sendRawTransaction",
                "params": [
                  "f86d80843b9aca0082520894b7c609cffa0e47db2467ea03ff3e598bf59361a5880de0b6b3a7640000808207f2a02d013b9980176ca8674f77797ac04e928b8de3be92dd452501ec26acbb2b1abca054041f43109eeadbb4d6b712a20dc71e5dbe1225e549644be3de803b55041a89"
                ],
                "id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jsonrpc": {
                      "type": "string",
                      "example": "2.0"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "result": {
                      "type": "string",
                      "description": "The transaction hash",
                      "example": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jsonrpc": {
                      "type": "string",
                      "example": "2.0"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": -32000
                        },
                        "message": {
                          "type": "string",
                          "example": "nonce too low"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}